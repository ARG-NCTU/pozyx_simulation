<launch>
    <!-- <include file="$(find vrx_gazebo)/launch/vrx_drone.launch"/> -->
    <arg name="drone_ns" default="drone"/>
    <arg name="enable_wamv" default="false"/>
    <arg name="wamv_name" default="wamv2"/>
    <group ns="pozyx_simulation">
        <node pkg="ros_tools" type="model_state_to_tf.py" name="model_state_to_tf_wamv" output="log">
            <param name="model_name" value="$(arg wamv_name)"/>
            <param name="model_tf_suffix" value="/base_link"/>
        </node>

        <node pkg="ros_tools" type="model_state_to_tf.py" name="model_state_to_tf_drone" output="log">
            <param name="model_name" value="$(arg drone_ns)"/>
            <param name="model_tf_suffix" value="/base_link"/>
            <param name="broadcast_rate" value="10"/>
        </node>

        <node pkg="ros_tools" type="midpoint_pose_calculator_node.py" name="midpoint_optim_pose_calculator_node" output="screen">
        </node>

        <node pkg="ros_tools" type="midpoint_pose_calculator_node.py" name="midpoint_gt_pose_calculator_node" output="screen">
            <remap from="/pozyx_simulation/uwb0/pose/optim" to="/pozyx_simulation/uwb0/pose/ground_truth"/>
            <remap from="/pozyx_simulation/uwb1/pose/optim" to="/pozyx_simulation/uwb1/pose/ground_truth"/>
            <remap from="/pozyx_simulation/drone/pose/optim" to="/pozyx_simulation/drone/pose/ground_truth"/>
        </node>

        <node pkg="ros_tools" type="pose_stamed_to_path.py" name="optim_pose_to_path" output="screen">
            <remap from="pose" to="/pozyx_simulation/drone/pose/optim"/>
            <remap from="path" to="/pozyx_simulation/drone/pose/path"/>
            <param name="remove_initial_pose" value="True"/>
            <param name="remove_initial_count" value="10"/>
        </node>

        <group ns="uwb0">
            <node pkg="pozyx_simulation" name="pozyx_simulation" type="uwb_simulation_wamv_uav.py" output="log">
                <param name="tag_frame" value="$(arg drone_ns)/uwb/0"/>
                <param name="robot_frame" value="$(arg wamv_name)/base_link"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="estimated_pose_to_path" output="screen">
                <remap from="pose" to="pose/estimated"/>
                <remap from="path" to="path/estimated"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="1"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="gt_pose_to_path" output="screen">
                <remap from="pose" to="pose/ground_truth"/>
                <remap from="path" to="path/ground_truth"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="1"/>
            </node>

            <node pkg="pozyx_ros" type="multilateration_ros.py" name="multilateration_ros" output="screen">
                <param name="wamv_name" value="$(arg wamv_name)"/>
                <remap from="uwb/distances" to="distance"/>
                <remap from="uwb/pose" to="pose/optim"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="optim_pose_to_path" output="screen">
                <remap from="pose" to="pose/optim"/>
                <remap from="path" to="path/optim"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="10"/>
            </node>
        </group>

        <group ns="uwb1">
            <node pkg="pozyx_simulation" name="pozyx_simulation" type="uwb_simulation_wamv_uav.py" output="screen">
                <param name="tag_frame" value="$(arg drone_ns)/uwb/1"/>
                <param name="robot_frame" value="$(arg wamv_name)/base_link"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="estimated_pose_to_path" output="screen">
                <remap from="pose" to="pose/estimated"/>
                <remap from="path" to="path/estimated"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="1"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="gt_pose_to_path" output="screen">
                <remap from="pose" to="pose/ground_truth"/>
                <remap from="path" to="path/ground_truth"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="1"/>
            </node>

            <node pkg="pozyx_ros" type="multilateration_ros.py" name="multilateration_ros" output="screen">
                <param name="wamv_name" value="$(arg wamv_name)"/>
                <remap from="uwb/distances" to="distance"/>
                <remap from="uwb/pose" to="pose/optim"/>
            </node>

            <node pkg="ros_tools" type="pose_stamed_to_path.py" name="optim_pose_to_path" output="screen">
                <remap from="pose" to="pose/optim"/>
                <remap from="path" to="path/optim"/>
                <param name="remove_initial_pose" value="True"/>
                <param name="remove_initial_count" value="8"/>
            </node>
        </group>

        <group ns="viz">
            <node pkg="ros_tools" type="uwb_yaml_to_tf_marker.py" name="uwb_yaml_to_tf_marker_wamv" output="log">
                <remap from="anchors" to="anchor/$(arg wamv_name)"/>
                <param name="config_path" value="$(find pozyx_ros)/config/wamv/wamv.yaml"/>
                <param name="robot_base_frame" value="$(arg wamv_name)/base_link"/>
                <param name="robot_uwb_origin_frame" value="$(arg wamv_name)/uwb/origin"/>
                <param name="robot_uwb_frame" value="$(arg wamv_name)/uwb"/>
                <param name="uwb_origin_shift_x" value="0.0"/>
                <param name="uwb_origin_shift_y" value="0.0"/>
                <param name="uwb_origin_shift_z" value="1.3"/>
                <rosparam param="marker_color">[0, 0, 1, 1]</rosparam>
            </node>
            <node pkg="ros_tools" type="uwb_yaml_to_tf_marker.py" name="uwb_yaml_to_tf_marker_drone" output="log">
                <remap from="anchors" to="anchor/drone"/>
                <param name="config_path" value="$(find pozyx_ros)/config/wamv/drone.yaml"/>
                <param name="robot_base_frame" value="$(arg drone_ns)/base_link"/>
                <param name="robot_uwb_origin_frame" value="$(arg drone_ns)/uwb/origin"/>
                <param name="robot_uwb_frame" value="$(arg drone_ns)/uwb"/>
                <param name="uwb_origin_shift_x" value="0.0"/>
                <param name="uwb_origin_shift_y" value="0.0"/>
                <param name="uwb_origin_shift_z" value="0.0"/>
                <rosparam param="marker_color">[1, 0, 0, 1]</rosparam>
            </node>
            <node pkg="ros_tools" type="uwb_anchor_to_tag_line.py" name="uwb_anchor_to_tag_line" output="log">
                <param name="tag_frame_prefix" value="$(arg drone_ns)/uwb/"/>
            </node>
        </group>

        <!-- <node pkg="ros_tools" type="model_state_to_pose_stamped" name="model_state_to_pose_stamped_drone" output="log">
            <param name="model_name" value="$(arg drone_ns)"/>
            <param name="pose_topic_suffix" value="/pose_stamped"/>
            <param name="publish_rate" value="100"/>
        </node>

        <group if="$(arg enable_wamv)">
            <node pkg="ros_tools" type="model_state_to_pose_stamped" name="model_state_to_pose_stamped_wamv" output="log">
                <param name="model_name" value="wamv"/>
                <param name="pose_topic_suffix" value="/pose_stamped"/>
                <param name="publish_rate" value="100"/>
            </node>
        </group> -->
    </group>

    <param name="$(arg drone_ns)/robot_description" command="cat /home/argrobotx/robotx-2022/sdf2urdf/iris.urdf"/>
    <node name="tf_drone_to_rotor_0" pkg="tf2_ros" type="static_transform_publisher" args="0.130000 -0.220000 0.023000 0 0 0 $(arg drone_ns)/base_link $(arg drone_ns)/rotor_0"/>
    <node name="tf_drone_to_rotor_1" pkg="tf2_ros" type="static_transform_publisher" args="-0.130000 0.200000 0.023000 0 0 0 $(arg drone_ns)/base_link $(arg drone_ns)/rotor_1"/>
    <node name="tf_drone_to_rotor_2" pkg="tf2_ros" type="static_transform_publisher" args="0.13 0.220000 0.023000 0 0 0 $(arg drone_ns)/base_link $(arg drone_ns)/rotor_2"/>
    <node name="tf_drone_to_rotor_3" pkg="tf2_ros" type="static_transform_publisher" args="-0.13 -0.200000 0.023000 0 0 0 $(arg drone_ns)/base_link $(arg drone_ns)/rotor_3"/>

</launch>
